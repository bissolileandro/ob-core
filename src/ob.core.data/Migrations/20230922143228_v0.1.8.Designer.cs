// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ob.core.data.Context;

#nullable disable

namespace ob.core.data.Migrations
{
    [DbContext(typeof(ObCoreContext))]
    [Migration("20230922143228_v0.1.8")]
    partial class v018
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ob.core.domain.Entities.CarteiraCashBackLancamentos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CarteiraCashbackId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataDeAtualizacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 9, 22, 11, 32, 27, 734, DateTimeKind.Local).AddTicks(8440));

                    b.Property<DateTime>("DataDeCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 9, 22, 11, 32, 27, 734, DateTimeKind.Local).AddTicks(8100));

                    b.Property<DateTime>("DataExpiracao")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Saldo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SaldoAnterior")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TipoLancamento")
                        .HasColumnType("int");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ValorUtilizado")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CarteiraCashbackId");

                    b.ToTable("CarteiraCashBackLancamentos");
                });

            modelBuilder.Entity("ob.core.domain.Entities.CarteiraCashback", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<DateTime>("DataDeAtualizacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 9, 22, 11, 32, 27, 734, DateTimeKind.Local).AddTicks(6082));

                    b.Property<DateTime>("DataDeCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 9, 22, 11, 32, 27, 734, DateTimeKind.Local).AddTicks(5870));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("SaldoAtual")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId")
                        .IsUnique();

                    b.ToTable("CarteiraCashback");
                });

            modelBuilder.Entity("ob.core.domain.Entities.Cotacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataDeAtualizacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 9, 22, 11, 32, 27, 736, DateTimeKind.Local).AddTicks(9022));

                    b.Property<DateTime>("DataDeCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 9, 22, 11, 32, 27, 736, DateTimeKind.Local).AddTicks(8837));

                    b.HasKey("Id");

                    b.ToTable("Cotacao");
                });

            modelBuilder.Entity("ob.core.domain.Entities.CotacaoDetalhes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CotacaoId")
                        .HasColumnType("int");

                    b.Property<string>("CpfOuCnpj")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataDeAtualizacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataDeCriacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime2");

                    b.Property<int>("EstadoCivil")
                        .HasColumnType("int");

                    b.Property<bool>("MotoristaEntre18E15Anos")
                        .HasColumnType("bit");

                    b.Property<string>("NomeMotorista")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PrincipalMotoristaVeiculo")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("CotacaoId")
                        .IsUnique();

                    b.ToTable("CotacaoDetalhes");
                });

            modelBuilder.Entity("ob.core.domain.Entities.CotacaoVeiculo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AnoModelo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CepVeiculoPerNoite")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CotacaoId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataAplicacaoBlindagem")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataAplicacaoKitGas")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataDeAtualizacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 9, 22, 11, 32, 27, 738, DateTimeKind.Local).AddTicks(3464));

                    b.Property<DateTime>("DataDeCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 9, 22, 11, 32, 27, 738, DateTimeKind.Local).AddTicks(3339));

                    b.Property<string>("MarcaVeiculo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModeloVeiculo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroPlaca")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PossuiBlindagem")
                        .HasColumnType("bit");

                    b.Property<bool>("PossuiKitGas")
                        .HasColumnType("bit");

                    b.Property<decimal?>("ValorAproximadoBlindagem")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("ValorAproximadoKitGas")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("VeiculoZeroKm")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("CotacaoId")
                        .IsUnique();

                    b.ToTable("CotacaoVeiculo");
                });

            modelBuilder.Entity("ob.core.domain.Entities.EmailConfiguracao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataDeAtualizacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 9, 22, 11, 32, 27, 738, DateTimeKind.Local).AddTicks(8347));

                    b.Property<DateTime>("DataDeCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 9, 22, 11, 32, 27, 738, DateTimeKind.Local).AddTicks(8124));

                    b.Property<string>("SmptEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SmptPorta")
                        .HasColumnType("int");

                    b.Property<string>("SmptSenha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SmtpServidor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EmailConfiguracao");
                });

            modelBuilder.Entity("ob.core.domain.Entities.ParametrosDeSistema", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Ambiente")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataDeAtualizacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 9, 22, 11, 32, 27, 740, DateTimeKind.Local).AddTicks(202));

                    b.Property<DateTime>("DataDeCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 9, 22, 11, 32, 27, 739, DateTimeKind.Local).AddTicks(9949));

                    b.Property<int>("SistemaId")
                        .HasColumnType("int");

                    b.Property<string>("UrlApi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SistemaId");

                    b.ToTable("ParametrosDeSistema");
                });

            modelBuilder.Entity("ob.core.domain.Entities.PerfilUsuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataDeAtualizacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 9, 22, 11, 32, 27, 740, DateTimeKind.Local).AddTicks(2239));

                    b.Property<DateTime>("DataDeCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 9, 22, 11, 32, 27, 740, DateTimeKind.Local).AddTicks(2028));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoDeUsuario")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("PerfilUsuario");
                });

            modelBuilder.Entity("ob.core.domain.Entities.Sistema", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<Guid>("ChaveDeAcesso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("66fe0173-a431-4f80-b25e-1c45d3509f3a"));

                    b.Property<DateTime>("DataDeAtualizacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 9, 22, 11, 32, 27, 740, DateTimeKind.Local).AddTicks(3657));

                    b.Property<DateTime>("DataDeCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 9, 22, 11, 32, 27, 740, DateTimeKind.Local).AddTicks(3319));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Sistema");
                });

            modelBuilder.Entity("ob.core.domain.Entities.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CPFCNPJ")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataDeAtualizacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 9, 22, 11, 32, 27, 740, DateTimeKind.Local).AddTicks(5854));

                    b.Property<DateTime>("DataDeCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 9, 22, 11, 32, 27, 740, DateTimeKind.Local).AddTicks(5653));

                    b.Property<DateTime>("DataDeNascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PerfilUsuarioId")
                        .HasColumnType("int");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoDePlano")
                        .HasColumnType("int");

                    b.Property<int>("TipoPessoa")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PerfilUsuarioId");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("ob.core.domain.Entities.UsuarioLead", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("AceiteTermo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DataDeAtualizacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 9, 22, 11, 32, 27, 741, DateTimeKind.Local).AddTicks(1278));

                    b.Property<DateTime>("DataDeCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 9, 22, 11, 32, 27, 741, DateTimeKind.Local).AddTicks(1097));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoSeguro")
                        .HasColumnType("int");

                    b.Property<bool>("UsuarioJaCadastrado")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("UsuarioLead");
                });

            modelBuilder.Entity("ob.core.domain.Entities.CarteiraCashBackLancamentos", b =>
                {
                    b.HasOne("ob.core.domain.Entities.CarteiraCashback", "CarteiraCashback")
                        .WithMany("CarteiraCashBackLancamentos")
                        .HasForeignKey("CarteiraCashbackId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CarteiraCashback");
                });

            modelBuilder.Entity("ob.core.domain.Entities.CarteiraCashback", b =>
                {
                    b.HasOne("ob.core.domain.Entities.Usuario", "Usuario")
                        .WithOne("CarteiraCashback")
                        .HasForeignKey("ob.core.domain.Entities.CarteiraCashback", "UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ob.core.domain.Entities.CotacaoDetalhes", b =>
                {
                    b.HasOne("ob.core.domain.Entities.Cotacao", "Cotacao")
                        .WithOne("CotacaoDetalhes")
                        .HasForeignKey("ob.core.domain.Entities.CotacaoDetalhes", "CotacaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cotacao");
                });

            modelBuilder.Entity("ob.core.domain.Entities.CotacaoVeiculo", b =>
                {
                    b.HasOne("ob.core.domain.Entities.Cotacao", "Cotacao")
                        .WithOne("CotacaoVeiculo")
                        .HasForeignKey("ob.core.domain.Entities.CotacaoVeiculo", "CotacaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cotacao");
                });

            modelBuilder.Entity("ob.core.domain.Entities.ParametrosDeSistema", b =>
                {
                    b.HasOne("ob.core.domain.Entities.Sistema", "Sistema")
                        .WithMany("ParametrosDeSistemas")
                        .HasForeignKey("SistemaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sistema");
                });

            modelBuilder.Entity("ob.core.domain.Entities.Usuario", b =>
                {
                    b.HasOne("ob.core.domain.Entities.PerfilUsuario", "PerfilUsuario")
                        .WithMany("Usuarios")
                        .HasForeignKey("PerfilUsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PerfilUsuario");
                });

            modelBuilder.Entity("ob.core.domain.Entities.CarteiraCashback", b =>
                {
                    b.Navigation("CarteiraCashBackLancamentos");
                });

            modelBuilder.Entity("ob.core.domain.Entities.Cotacao", b =>
                {
                    b.Navigation("CotacaoDetalhes")
                        .IsRequired();

                    b.Navigation("CotacaoVeiculo")
                        .IsRequired();
                });

            modelBuilder.Entity("ob.core.domain.Entities.PerfilUsuario", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("ob.core.domain.Entities.Sistema", b =>
                {
                    b.Navigation("ParametrosDeSistemas");
                });

            modelBuilder.Entity("ob.core.domain.Entities.Usuario", b =>
                {
                    b.Navigation("CarteiraCashback");
                });
#pragma warning restore 612, 618
        }
    }
}
